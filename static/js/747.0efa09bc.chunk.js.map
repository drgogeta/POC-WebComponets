{"version":3,"file":"static/js/747.0efa09bc.chunk.js","mappings":"yLAEIA,EAAe,WACjB,WAAYC,IAAS,gBACnBC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKC,QAAU,GACfD,KAAKE,SAAW,kBAAM,MAJP,gDAMjB,WACwB,MAAlBF,KAAKG,YACPH,KAAKI,YAAcJ,KAAKG,UAAUH,KAAKK,GAAI,cAR9B,kCAWjB,WAC0B,MAApBL,KAAKI,aACPJ,KAAKI,gBAbQ,oBAgBjB,WACE,OAAOJ,KAAKE,SAASI,OAAOC,OAAO,GAAIP,KAAKC,YAjB7B,cAmBjB,WAAW,OAAOO,EAAAA,EAAAA,GAAWR,UAnBZ","sources":["../../app-1/dist/esm/context-consumer.entry.js"],"sourcesContent":["import { r as registerInstance, g as getElement } from './index-83665fc4.js';\n\nlet ContextConsumer = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.context = {};\n    this.renderer = () => null;\n  }\n  connectedCallback() {\n    if (this.subscribe != null) {\n      this.unsubscribe = this.subscribe(this.el, 'context');\n    }\n  }\n  disconnectedCallback() {\n    if (this.unsubscribe != null) {\n      this.unsubscribe();\n    }\n  }\n  render() {\n    return this.renderer(Object.assign({}, this.context));\n  }\n  get el() { return getElement(this); }\n};\n\nexport { ContextConsumer as context_consumer };\n"],"names":["ContextConsumer","hostRef","registerInstance","this","context","renderer","subscribe","unsubscribe","el","Object","assign","getElement"],"sourceRoot":""}